LOBSTER v4.1.0 (g++ 7.5.0)
Copyright (C) 2021 by Chair of Solid-State and Quantum Chemistry, RWTH Aachen.
All rights reserved. Contributions by S. Maintz, V. L. Deringer, M. Esser, R. Nelson, C. Ertural, P. C. Mueller, A. L. Tchougreeff and R. Dronskowski
starting on host drut on 2024-08-29 at 21:34:36 IST using 16 threads
detecting used PAW program... VASP
initializing PW system...
initializing Augmentations...
recommended basis functions:
O 2p 2s 
Ti 3d 4s 
initializing LCAO system...
setting up local basis functions...
WARNING: You did not specify your basis with the includeOrbitals in the lobsterin file.
WARNING: Thus I will default to includeOrbitals spdf. Make sure this is ok!
 O (pbeVaspFit2015) 2s 2p_y 2p_z 2p_x 
Ti (pbeVaspFit2015) 4s 4p_y 4p_z 4p_x 3d_xy 3d_yz 3d_z^2 3d_xz 3d_x^2-y^2 
INFO: There are more PAW bands than local basis functions available.
INFO: To prevent trouble in orthonormalization and Hamiltonian reconstruction
INFO: the PAW bands from 181 and upwards will be ignored.
setting up CO interactions...
WARNING: You did not specify any COHP pairs in the lobsterin file. As default
WARNING: I will try to find any pairs between 1.0 and 3.0 A distance,
WARNING: but that might be wrong. If you want pCOHPs or pCOOPs, change the lobsterin!
 found 83 interactions.
projecting...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

WARNING: Cannot use the tetrahedron method for k-space integration and must fall
WARNING: back to Gaussian smearing which can take significantly longer. Make
WARNING: sure to use the tetrahedron method whenever applicable.

calculating overlaps...
post-processing projection...
WARNING: 34 of 162 k-points could not be orthonormalized with an accuracy of 1.0E-5.
WARNING: Generally, this is not a critical error. But to help you analyze it,
WARNING: I dumped the band overlap matrices to the file bandOverlaps.lobster.
WARNING: Please check how much they deviate from the identity matrix and decide to
WARNING: use your results only, if you are sure that this is ok.

abs. total  spilling:  16.86%
abs. charge spilling:   1.06%

calculating pDOS... using Gaussian smearing integration (sigma=0.2eV)
writing DOSCAR.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing COOPCAR.lobster and ICOOPLIST.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

calculating pCOHPs... using Gaussian smearing integration (sigma=0.2eV)
writing COHPCAR.lobster and ICOHPLIST.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing COBICAR.lobster and ICOBILIST.lobster...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing CHARGE.lobster and GROSSPOP.lobster...
calculating Madelung energies...
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

writing SitePotentials.lobster and MadelungEnergies.lobster...
finished in 0 h 13 min 49 s 848 ms of wall time
            3 h 11 min 30 s  40 ms of user time
            0 h  0 min 21 s  50 ms of sys  time
